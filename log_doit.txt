- - - - - < 라즈베리파이 > - - - - -

1. 라즈베리파이 디스크 굽기
3.3 may 2020 버전

2. 화면 돌리기
cd /boot 에서 config.txt 마지막에 display_rotate=1추가후 리부팅

3. 업데이트
sudo apt-get update와 sudo apt-get upgrade 진행 + sudo rpi-update

4. 파이썬 버전확인
python3 -V으로 버전 확인 => 3.7.3

5. 메인 컴퓨터에 putty 설치

6. 라즈베리파이 주소 확인
hostname -I (대문자 i) 로 라즈베리파이 ip주소 확인 (ifconfig도 가능)

7. 라즈베리파이 전원공급 확인 (255 정상, 0부족)
cat /sys/devices/platform/leds/leds/led1/brightness

8. ip 고정
sudo nano /etc/dhcpcd.conf
파일중 이 부분 주석 해제
# Example static IP configuration:
interface wlan0
static ip_address="원하는ip"/24
static routers="라우터ip"
static domain_name_servers="라우터ip"

9. 네트워크 재부팅 + 라즈베리 재부팅
sudo /etc/init.d/networking restart

10. 시간대 설정
date
sudo dpkg-reconfigure tzdata
아시아-서울 확인(gui 화면)
date
(업데이트까지 시간좀 걸리는거 같음)
sudo cat /etc/timezone 

< git >

11. 깃 설치
sudo apt-get install git

12. 라즈베리파이에 ssh key생성 
home(~) 에서 ssh-keygen 으로 공개,개인키 생성
cd ~/.ssh 로가서 ls로 생성확인
cat id_rsa.pub 해서 내용 전부 복사
git에 공개키 등록

13. git의 ssh주소 복사

14. cd ~에서 github 폴더 생성후 진입

15. git clone git@github.com:Auint/mini_pot.git 해서 연결 성공

16. 깃-파이썬 동작 확인
python3 TESTZONE.py 로 실행 확인

17. 라즈베리 계정 생성후 커밋과 풀 테스트 완료
git config --global user.email "temp@temp"
git config --global user.name "RPi_su"

18. sudo reboot로 재시작 후 한번더 테스트

19. sudo halt로 종료

20. 오류생겨서 삭제후 재연결
rm -rf mini_pot
(error : ssh could not resolve hostname github.com)



- - - - - < 서버 > - - - - -

1. aws가입 및 인스턴스 시작
서버 = 서울
프리티어 = 아마존 = t2

2. 인바운드 규칙 
ssh 내 ip접속 허용 (https, http 위치무관 접근 허용)
socket통신을 위해 tcp포트 8282 설정

3. 키 (아마존-my)
putty key gen에서 인스턴스 시작시 받았던 key로 동일한 이름의 ppk생성

4. 접속
id : ubuntu (ex. ec2-user)

5. 서버 초기 설정 

6. 기존 시간대 지워주고 한국으로 바꿔주고 확인
sudo rm /etc/localtime
sudo ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime
date

7. 루트 비밀번호 설정
i-7
sudo passwd root temp<< 아직 미설정

8. 호스트 이름 설정
sudo hostnamectl set-hostname server-mini_pot

sudo nano /etc/cloud/cloud.cfg
preserve_hostname : false => true로 변경
hostname

9. 라즈베리파이랑 동일하게 git 설치 진행
git config --global user.email "EC2@server"
git config --global user.name "server_su"

10. 업데이트
sudo apt-get update
sudo apt-get upgrade

< 서버 디비 >
1. 디비 존재확인
mysql --version 

2. 마리아디비로 설치
sudo apt-get install mariadb-server
sudo apt-get install mariadb-client

4. 디비 접속
sudo mysql -u root

5. 디비존재 확인
show databases;

6. mysql databases에 접근
use mysql

7. 사용자 확인
select user, host, password from user;

8. 사용자 추가
create user auint@localhost identified by '비밀번호';
grant all privileges on *.* to 'auint'@'localhost' identified by '비밀번호';

+ 팁: 마리아디비 사용시 system을 앞에 붙이면 리눅스 명령어 사용가능
system ls

9. 테이블 생성
CREATE TABLE mytable(
    time DATETIME NOT NULL,
    plant varchar(20) NULL,
    temperature int NULL,
    humidity int NULL,
    illuminance float NULL,
    PRIMARY KEY (time)
    );

10. 테이블 생성 확인
show tables;
#drop tables mytable;

11. 테이블 속성 확인
desc mytable;
SELECT * FROM mytable; << 현제 방금 만들어서 NULL

12. 테스트 데이터 삽입
INSERT INTO mytable(time, plant, temperature, humidity, illuminance) VALUES("2021-06-22 14:36:11.003", "temp_plan", 6, 7, 8.88);
2021-06-22 14:22:11.003 // 000,003,007 단위로 반올림?

13. pip 설치 
sudo apt-get install python3-pip

14. pymysql 설치
sudo pip3 install pymysql

14. pandas 설치
sudo pip3 install pandas


- - - - - < 라즈베리 디비 > - - - - -
1. 디비 존재확인
mysql --version 

2. mysql 서버 설치 
sudo apt-get install mysql-server
#sudo apt-get install mysql-client 

2. 디비 설치 에러발생 log_error참조

3. 마리아디비로 설정
sudo apt-get install mariadb-server
sudo apt-get install mariadb-client

4. pip 업그레이드
sudo pip3 install --upgrade setuptools

5. 파이썬으로 pymysql 설치
python3 -m pip install PyMySQL

4. 마리아 디비에 접속
sudo mysql -u root

5. 디비 생성
CREATE DATABASE mysql DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;

6. 확인
show databases;

5. 루트 비번설정
use mydb
use mysql
select user, host, password from user;
update user set password=password('password') where user = 'root';

+ 팁: 마리아디비 사용시 system을 앞에 붙이면 리눅스 명령어 사용가능
system ls

6. 비밀번호 unix_socket형에서 mysql_native_password형으로 바꿔주기
SELECT User, Host, plugin FROM mysql.user;
update user set plugin='mysql_native_password' where user='root';
flush privileges;
sudo mysql -u root -p로 접속
service mysqld start 
UPDATE user SET password='' WHERE user='root';

UPDATE mysql.user SET password='*6CC6A1C22CFFA93B23769CAE343636557E024D12' WHERE user='auint';

7. 테이블 생성
CREATE TABLE mytable(
    time DATETIME NOT NULL,
    plant varchar(20) NULL,
    temperature int NULL,
    humidity int NULL,
    illuminance float NULL,
    PRIMARY KEY (time)
    );

8. 테이블 생성 확인
show tables;

9. 테이블 속성 확인
desc mytable;
SELECT * FROM mytable; 

10. json사용하기 위해서 다운
==> 파이썬에 내장되있었음

11. 파이썬과 마리아 연결
update user set plugin='';





